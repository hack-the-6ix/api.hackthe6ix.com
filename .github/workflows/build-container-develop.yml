name: Build and deploy container

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Setup environment
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-$develop
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          cache-from: type=local,src=/tmp/.buildx-cache
          target: deploy
          push: true
          tags: |
            ${{ vars.REGISTRY_REPO_PATH }}:develop
            ${{ vars.REGISTRY_REPO_PATH }}:${{ github.sha }}

      # Clean up cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Establish cluster connection using cloudflared
        uses: hack-the-6ix/cloudflared-tcp-action@main
        with:
          cloudflare_tunnel_service_token_id: ${{ secrets.CLOUDFLARE_TUNNEL_SERVICE_TOKEN_ID }}
          cloudflare_tunnel_service_token_secret: ${{ secrets.CLOUDFLARE_TUNNEL_SERVICE_TOKEN_SECRET }}
          cloudflare_tunnel_hostname: "k8sapi-moose.hackthe6ix.com"
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'
      - name: Apply Kubeconfig
        run: |
          mkdir -p ~/.kube/
          echo $KUBECONFIG_B64 | base64 -d > ~/.kube/config
        shell: bash
        env:
          KUBECONFIG_B64: ${{secrets.KUBECONFIG_B64}}
      - name: Deploy Helm chart
        run: |
          helm upgrade --install staging ./chart -f ./deploy/values.develop.yaml -n ht6-backend --set image.tag="$IMAGE_TAG"
        shell: bash
        env:
          IMAGE_TAG: ${{ github.sha }}
      - name: Remove Kubeconfig
        if: always()
        run: |
          rm -rf ~/.kube/config
        shell: bash
      - name: Shutdown cluster connection
        if: always()
        uses: hack-the-6ix/cloudflared-tcp-action/shutdown@main